generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["metrics", "omitApi"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id                    Int      @id @default(autoincrement())
  profileImage          String?
  thumbnailProfileImage String?
  firstName             String?
  lastName              String?
  fullName              String?  @default("")
  email                 String?  @unique
  phoneNumber           String?
  password              String?
  role                  UserRole
  businessName          String?
  experience            Decimal?
  address1              String?
  address2              String?
  state                 String?
  county                String?
  township              String?
  zipCode               String?
  bio                   String?
  additionalInfo        String?

  applicators ApplcatorGrower[] @relation("Applcators")
  growers     ApplcatorGrower[] @relation("Growers")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  GROWER
  APPLICATOR
  WORKER
}

model ApplcatorGrower {
  id                  Int     @id @default(autoincrement())
  applicatorId        Int
  growerId            Int
  // Custom names specific to the relationship
  applicatorFirstName String?
  applicatorLastName  String?
  growerFirstName     String?
  growerLastName      String?

  inviteStatus InviteStatus @default(NOT_SENT)
  isArchived   Boolean      @default(false)

  applicator User @relation("Applcators", fields: [applicatorId], references: [id])
  grower     User @relation("Growers", fields: [growerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([applicatorId, growerId])
}

enum InviteStatus {
  NOT_SENT
  PENDING
  ACCEPTED
  REJECTED
}
