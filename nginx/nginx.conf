# Redirect all HTTP traffic to HTTPS
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name applicatorview.com www.applicatorview.com;

    return 301 https://$host$request_uri;
}

# HTTPS server block
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    server_name applicatorview.com www.applicatorview.com;

    # Root for Flutter Web App
    root /var/www/html;
    index index.html index.htm;

    ssl_certificate     /etc/nginx/conf.d/ssl/applicatorview.com/cert.pem;
    ssl_certificate_key /etc/nginx/conf.d/ssl/applicatorview.com/key.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Proxy microservices
    location /user-service/ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /job-service/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /admin-service/ {
        proxy_pass http://localhost:3002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Redirect /map to /map/
    location = /map {
        return 301 /map/;
    }

    # Serve React app at /map/
    location ^~ /map/ {
        root /var/www;
        index index.html;
        try_files $uri $uri/ /map/index.html;
    }

    # Serve Flutter app at root /
    location / {
        try_files $uri $uri/ /index.html;
    }
}
